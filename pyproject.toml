[tool.poetry]
name = "mvm-test"
version = "0.1.0"
description = "Entorno virtual para prueba tecnica de MVM"
authors = ["Brayan Zapata"]
license = "MIT"

[tool.poetry.dependencies]
python = "3.12.4"
torch = "^2.3.0"
numpy = "^1.26.4"
matplotlib = "^3.9.0"
scikit-image = "^0.24.0"
mypy = "^1.10.1"
lxml = "^5.2.2"
scikit-learn = "^1.5.1"
seaborn = "^0.13.2"
keras = "^3.4.1"
keras-core = "^0.1.7"
imbalanced-learn = "^0.12.3"
plotly = "^5.23.0"
pyspark = "^3.5.2"
mlflow = "^2.15.1"
databricks = "^0.2"
ipykernel = "^6.29.5"
parquet = "^1.3.1"
setuptools = "^73.0.1"


[tool.mypy]
mypy_path = "src"
python_version = "3.12"

[pycodestyle]
# E501 reports lines that exceed the length of 100.
max-line-length = 100

pandas-stubs = "^2.2.2.240603"
[build-system]

requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff.lint.pycodestyle]
max-doc-length = 100
ignore-overlong-task-comments = true


[tool.ruff]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

line-length = 100
indent-width = 4
src = ["src"]


[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
    "W191", # indentation contains tabs
]
# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]